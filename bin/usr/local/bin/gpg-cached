#!/bin/env python

import os
import re
import sys
import subprocess
import logging

log = logging.getLogger(__name__)
log.setLevel(logging.INFO)
handler = logging.StreamHandler()
log.addHandler(handler)


def shell(cmd):
    p = subprocess.Popen(cmd, stdin=subprocess.PIPE, stdout=subprocess.PIPE)

    return_code = p.wait()
    output = p.stdout.read().decode() if p.stdout else None
    err = p.stderr.read().decode() if p.stderr else None

    return return_code, output, err


def keygrips(id):
    cmd = ["gpg", "--fingerprint", "--with-keygrip", "--keyid-format=SHORT", id]
    _, o, _ = shell(cmd)

    parts = [p for p in re.split("\n\n", o) if p]
    for p in parts:
        keys = [k for k in re.split("sub", p) if k]
        for k in keys:
            if sid := re.search("[a-z0-9]+/([A-Z0-9]+)", k):
                sid = sid.group(1)
                log.debug(f"{sid=}")

            if not id == sid:
                continue

            if cap := re.search("\[(A|S|E|C)+\]", k):
                cap = cap.group(0)

            if grip := re.search("Keygrip = [0-9A-Fa-f]+", k):
                grip = grip.group(0)
                grip = grip.replace("Keygrip = ", "")

            if cap and grip:
                yield cap, grip


def is_cached(grip):
    cmd = ["gpg-connect-agent", f"KEYINFO --no-ask {grip} Err Pmt Des", "/bye"]

    _, o, _ = shell(cmd)
    cached = len(o) > 57 and o[57] == "1"
    return cached


def entry():
    ids = ["enc", "git", "pass", "92992011", "CDA494A4", "2C99BECA"]

    cached = []
    for id in ids:
        log.debug(f"{id=}")
        for cap, grip in keygrips(id):
            log.debug(f"{cap=} {grip=} {is_cached(grip)=}")
            if is_cached(grip):
                cached.append(f"{cap}{id}")

    print(*cached)


if __name__ == "__main__":
    entry()
