#!/bin/bash

good() {
    printf "\e[1;32m[+]\e[m %s\n" "$*"
}

bad() {
    printf "\e[1;31m[-]\e[m %s\n" "$*"
}

chk() {
    test $? -eq 0 && good "$*" || bad "$*"
}

systemd-chk() {
    unit=$1
    shift
    args=$@
    systemctl is-active "$unit" $args &> /dev/null; chk "$unit"
}

proc-chk() {
    pgrep "$1" &> /dev/null; chk "$1"
}

mount-chk() {
    DIR_A=$1
    DIA_B=$2
    MSG=$3

    $(cat /proc/mounts | grep -q "$DIR_A $DIR_B")
    if [ $? -eq 0 ]; then
        good "$MSG"
    else
        bad "$MSG"
    fi
}

file-age-chk() {
    file=$1
    limit=$2

    last_mod=$(stat -c "%Y" "$file")
    now_epoch=$(date +%s)
    epoch_diff=$(bc <<< "$now_epoch - $last_mod")
    if [ $epoch_diff -gt $limit ]; then
        age=$(stat -c "%y" $file)
        bad "$file last modified $age"
    else
        good "$file is up to date"
    fi
}

day_in_secs=$(bc <<< "60 * 60 * 24")
week_in_secs=$(bc <<< "$day_in_secs * 7")
month_in_secs=$(bc <<< "$week_in_secs * 4")

systemd-chk "earlyoom"
systemd-chk "dnscrypt-proxy"
systemd-chk "ufw"
systemd-chk "clamav-daemon"
systemd-chk "clamav-freshclam"
systemd-chk "apparmor"
systemd-chk "auditd"
systemd-chk "i3autotile" --user
echo ""
proc-chk "sxhkd"
proc-chk "xidlehook"
proc-chk "polybar"
proc-chk "dunst"
proc-chk "tincd"
proc-chk "unclutter"
proc-chk "autocutsel"
proc-chk "picom"

printf "\n\n"

local_dns=$(cat "/etc/resolv.conf" | grep ^nameserver | cut -d' ' -f2 | xargs)
echo "dns: $local_dns"

if [ -f "/etc/dnscrypt-proxy/dnscrypt-proxy.toml" ]; then
    dnscrypt_servers=$(cat "/etc/dnscrypt-proxy/dnscrypt-proxy.toml" | grep ^server_names)
    echo "dnscrypt servers: ${dnscrypt_servers:15}"
else
    bad "dnscrypt config not found"
fi

local_ip=$(ip -4 -br a | grep wlp3s0 | awk '{print $3}');
echo "local ip: $local_ip"

public_ip=$(dig +timeout=5 +short myip.opendns.com @resolver1.opendns.com 2> /dev/null)
if [ -n "$public_ip" ]; then
    echo "public ip: $public_ip";
else
    echo "public ip not found"
fi

printf "\n\n"

if [ $(ps -o user $(pgrep Xorg) | grep "root") ]; then
    bad "Xorg is running as root"
else
    good "Xorg is running rootless"
fi

mount-chk "$HOME/.private" "$HOME/private" "mounted ~/private"
mount-chk "$HOME/.vault"   "$HOME/vault"   "mounted ~/vault"
mount-chk "$HOME/.repo"    "$HOME/repo"    "mounted ~/repo"

file-age-chk "/etc/hosts" $month_in_secs
