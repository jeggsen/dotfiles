#!/bin/bash

if [ $# -eq 0 ]
then
    echo "usage: ytls <url>"
    exit 1
fi

err() { echo -e "$*" >&2; }
err_exit() { err "$@"; exit 1; }
trap 'err_exit "interrupted"' INT TERM

LIMIT=10

while getopts l:u:f: option
do
    case "${option}"
    in
        l) LIMIT=${OPTARG};;
        u) URL=${OPTARG};;
        f) FILE=${OPTARG};;
    esac
done

dump_ch() {
    url=$1
    for i in $(seq $LIMIT); do
        local TRIES=0
        local RESULT=1

        while [[ ! $RESULT -eq 0 ]]; do
            if [[ $TRIES -gt 5 ]]; then
                break
            fi

            OUT=$(youtube-dl --simulate --ignore-errors --quiet --dump-json --playlist-items $i -- "$url" 2> /dev/null)

            RESULT=$?
            TRIES=$((TRIES+1))

            # echo "result: $RESULT  --  tries: $TRIES"
        done

        if [[ "$RESULT" -eq 0 ]]; then
            res=$(echo "$OUT" | jq -r ".uploader,.upload_date,.webpage_url,.title" | tr "\n" "\t")
            echo "$res"
        else
            echo "failed to fetch $url"
        fi
    done
}

if [ -n "$FILE" ]; then
    while IFS="" read -r p || [ -n "$p" ]
    do
        name=$(echo "$p" | cut -d' ' -f1)
        url=$(echo "$p" | cut -d' ' -f2)
        dump_ch "$url"
        printf "\n"
    done < "$FILE"
elif [ -n "$URL" ]; then
    dump_ch "$URL"
fi
