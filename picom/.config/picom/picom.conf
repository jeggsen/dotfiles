backend = "glx";
glx-no-stencil = true;
glx-copy-from-front = false;

shadow = false;
fading = false;
fade-in-step = 1;
fade-out-step = 1;
fade-delta = 1
no-fading-openclose = false

active-opacity = 1;
inactive-opacity = 1;
frame-opacity = 1;
menu-opacity = 1.0;

vsync = true;
# Enable DBE painting mode, intended to use with VSync to (hopefully) eliminate tearing.
dbe = true;

# Try to detect WM windows and mark them as active.
mark-wmwin-focused = true;
# Mark all non-WM but override-redirect windows active (e.g. menus).
mark-ovredir-focused = true;
# Use EWMH _NET_WM_ACTIVE_WINDOW to determine which window is focused instead of using FocusIn/Out events.
# Usually more reliable but depends on a EWMH-compliant WM.
use-ewmh-active-win = true;

# Detect _NET_WM_OPACITY on client windows, useful for window managers not passing _NET_WM_OPACITY of client windows to frame windows.
# This prevents opacity being ignored for some apps.
# For example without this enabled my xfce4-notifyd is 100% opacity no matter what.
# ignore client opacity
detect-client-opacity = false;

# Specify refresh rate of the screen.
# If not specified or 0, picom will try detecting this with X RandR extension.
refresh-rate = 0;

# Unredirect all windows if a full-screen opaque window is detected, to maximize performance for full-screen windows, like games.
# Known to cause flickering when redirecting/unredirecting windows.
unredir-if-possible = false;

# Use WM_TRANSIENT_FOR to group windows, and consider windows in the same group focused at the same time.
detect-transient = true;
# Use WM_CLIENT_LEADER to group windows, and consider windows in the same group focused at the same time.
# WM_TRANSIENT_FOR has higher priority if --detect-transient is enabled, too.
detect-client-leader = true;

# See: https://github.com/yshui/picom/commit/b18d46bcbdc35a3b5620d817dd46fbc76485c20d
# Use X Sync fence to sync clients' draw calls. Needed on nvidia-drivers with GLX backend for some users.
xrender-sync-fence = true;

wintypes:
{
    tooltip = { fade = false; shadow = false; opacity = 1; focus = true; };
    notification = { fade = true; shadow = false; opacity = 1; focus = true; };
    utility = { fade = false; shadow = false; opacity = 1; focus = true; };
    dock = { fade = false; shadow = false; opacity = 1; focus = true; };
};
