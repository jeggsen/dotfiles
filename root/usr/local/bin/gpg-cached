#!/bin/env python

import os
import re
import sys
import subprocess


def shell(cmd):
    p = subprocess.Popen(cmd, stdin=subprocess.PIPE, stdout=subprocess.PIPE)

    output = p.stdout.read()
    return_code = p.wait()
    err = p.stderr.read() if p.stderr else None

    return return_code, output.decode(), err


def keygrips(id):
    cmd = ["gpg", "--fingerprint", "--with-keygrip", id]
    _, o, _ = shell(cmd)

    parts = [p for p in re.split("\n\n", o) if p]
    for p in parts:
        keys = [k for k in re.split("sub", p) if k]
        for k in keys:
            caps = re.search("\[(A|S|E|C)+\]", k).group(0)
            grip = (
                re.search("Keygrip = [0-9A-Fa-f]+", k)
                .group(0)
                .replace("Keygrip = ", "")
            )

            yield caps, grip


def is_cached(grip):
    cmd = ["gpg-connect-agent", f"KEYINFO --no-ask {grip} Err Pmt Des", "/bye"]

    _, o, _ = shell(cmd)
    cached = o[57] == "1"
    return cached


def entry():
    ids = ["enc", "git", "pass"]

    picks = []

    for id in ids:
        out = ""
        for cap, grip in keygrips(id):
            if is_cached(grip):
                out += cap
        if out:
            out = f"{id}"

        picks.append(out)

    picks = [p for p in picks if p]

    if not picks:
        sys.exit(1)

    result = " ".join(picks)
    print(result)


if __name__ == "__main__":
    entry()
